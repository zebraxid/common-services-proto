// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	commonproto "github.com/zebraxid/common-services-proto"

	mock "github.com/stretchr/testify/mock"
)

// InAppNotification_GetMessagesStreamStream is an autogenerated mock type for the InAppNotification_GetMessagesStreamStream type
type InAppNotification_GetMessagesStreamStream struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *InAppNotification_GetMessagesStreamStream) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Context provides a mock function with given fields:
func (_m *InAppNotification_GetMessagesStreamStream) Context() context.Context {
	ret := _m.Called()

	var r0 context.Context
	if rf, ok := ret.Get(0).(func() context.Context); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Context)
		}
	}

	return r0
}

// RecvMsg provides a mock function with given fields: _a0
func (_m *InAppNotification_GetMessagesStreamStream) RecvMsg(_a0 interface{}) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Send provides a mock function with given fields: _a0
func (_m *InAppNotification_GetMessagesStreamStream) Send(_a0 *commonproto.InAppNotifResponse) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*commonproto.InAppNotifResponse) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendMsg provides a mock function with given fields: _a0
func (_m *InAppNotification_GetMessagesStreamStream) SendMsg(_a0 interface{}) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
