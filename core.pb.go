// Code generated by protoc-gen-go. DO NOT EDIT.
// source: core.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ContentType int32

const (
	ContentType_KEY_VALUE_TEXT ContentType = 0
	ContentType_PLAIN_TEXT     ContentType = 1
	ContentType_HTML_TEXT      ContentType = 2
)

var ContentType_name = map[int32]string{
	0: "KEY_VALUE_TEXT",
	1: "PLAIN_TEXT",
	2: "HTML_TEXT",
}

var ContentType_value = map[string]int32{
	"KEY_VALUE_TEXT": 0,
	"PLAIN_TEXT":     1,
	"HTML_TEXT":      2,
}

func (x ContentType) String() string {
	return proto.EnumName(ContentType_name, int32(x))
}

func (ContentType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{0}
}

type FieldName int32

const (
	FieldName_ID             FieldName = 0
	FieldName_NAME           FieldName = 1
	FieldName_PID            FieldName = 2
	FieldName_RESET_CODE     FieldName = 3
	FieldName_ORG_ID         FieldName = 4
	FieldName_OTP            FieldName = 5
	FieldName_OTP_CREATED_AT FieldName = 6
)

var FieldName_name = map[int32]string{
	0: "ID",
	1: "NAME",
	2: "PID",
	3: "RESET_CODE",
	4: "ORG_ID",
	5: "OTP",
	6: "OTP_CREATED_AT",
}

var FieldName_value = map[string]int32{
	"ID":             0,
	"NAME":           1,
	"PID":            2,
	"RESET_CODE":     3,
	"ORG_ID":         4,
	"OTP":            5,
	"OTP_CREATED_AT": 6,
}

func (x FieldName) String() string {
	return proto.EnumName(FieldName_name, int32(x))
}

func (FieldName) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{1}
}

type Comparison int32

const (
	Comparison_EQUAL        Comparison = 0
	Comparison_LESS         Comparison = 1
	Comparison_GERATER      Comparison = 2
	Comparison_LESSEQUAL    Comparison = 3
	Comparison_GREATEREQUAL Comparison = 4
	Comparison_LIKE         Comparison = 5
)

var Comparison_name = map[int32]string{
	0: "EQUAL",
	1: "LESS",
	2: "GERATER",
	3: "LESSEQUAL",
	4: "GREATEREQUAL",
	5: "LIKE",
}

var Comparison_value = map[string]int32{
	"EQUAL":        0,
	"LESS":         1,
	"GERATER":      2,
	"LESSEQUAL":    3,
	"GREATEREQUAL": 4,
	"LIKE":         5,
}

func (x Comparison) String() string {
	return proto.EnumName(Comparison_name, int32(x))
}

func (Comparison) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{2}
}

type CrudResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrudResponse) Reset()         { *m = CrudResponse{} }
func (m *CrudResponse) String() string { return proto.CompactTextString(m) }
func (*CrudResponse) ProtoMessage()    {}
func (*CrudResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{0}
}

func (m *CrudResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrudResponse.Unmarshal(m, b)
}
func (m *CrudResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrudResponse.Marshal(b, m, deterministic)
}
func (m *CrudResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrudResponse.Merge(m, src)
}
func (m *CrudResponse) XXX_Size() int {
	return xxx_messageInfo_CrudResponse.Size(m)
}
func (m *CrudResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CrudResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CrudResponse proto.InternalMessageInfo

func (m *CrudResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CrudResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type PageInfo struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Total                int32    `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageInfo) Reset()         { *m = PageInfo{} }
func (m *PageInfo) String() string { return proto.CompactTextString(m) }
func (*PageInfo) ProtoMessage()    {}
func (*PageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7e43720d1edc0fe, []int{1}
}

func (m *PageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageInfo.Unmarshal(m, b)
}
func (m *PageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageInfo.Marshal(b, m, deterministic)
}
func (m *PageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageInfo.Merge(m, src)
}
func (m *PageInfo) XXX_Size() int {
	return xxx_messageInfo_PageInfo.Size(m)
}
func (m *PageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PageInfo proto.InternalMessageInfo

func (m *PageInfo) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *PageInfo) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PageInfo) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func init() {
	proto.RegisterEnum("proto.ContentType", ContentType_name, ContentType_value)
	proto.RegisterEnum("proto.FieldName", FieldName_name, FieldName_value)
	proto.RegisterEnum("proto.Comparison", Comparison_name, Comparison_value)
	proto.RegisterType((*CrudResponse)(nil), "proto.CrudResponse")
	proto.RegisterType((*PageInfo)(nil), "proto.PageInfo")
}

func init() { proto.RegisterFile("core.proto", fileDescriptor_f7e43720d1edc0fe) }

var fileDescriptor_f7e43720d1edc0fe = []byte{
	// 361 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x91, 0x4f, 0x8f, 0xda, 0x30,
	0x10, 0xc5, 0x37, 0x7f, 0xd9, 0xcc, 0x6e, 0x57, 0xd6, 0xa8, 0xaa, 0x72, 0x5c, 0x71, 0xa8, 0x10,
	0x07, 0x2e, 0xfd, 0x02, 0x84, 0xc4, 0xa5, 0x29, 0x81, 0xa4, 0xc6, 0x54, 0xa5, 0x97, 0x28, 0x80,
	0x8b, 0x22, 0x91, 0x38, 0x4a, 0x8c, 0xd4, 0xf6, 0xd3, 0x57, 0x8e, 0xbb, 0xa7, 0xf1, 0xef, 0xe9,
	0xbd, 0x19, 0x4b, 0x0f, 0xe0, 0x2c, 0x7b, 0xb1, 0xe8, 0x7a, 0xa9, 0x24, 0x7a, 0xe3, 0x98, 0x2e,
	0xe1, 0x39, 0xee, 0xef, 0x17, 0x26, 0x86, 0x4e, 0xb6, 0x83, 0xc0, 0x0f, 0xe0, 0x0f, 0xaa, 0x52,
	0xf7, 0x21, 0xb4, 0x5e, 0xad, 0x99, 0xc7, 0xfe, 0x13, 0x86, 0x30, 0x69, 0xc4, 0x30, 0x54, 0x57,
	0x11, 0xda, 0xaf, 0xd6, 0x2c, 0x60, 0x6f, 0x38, 0xfd, 0x0a, 0x8f, 0x45, 0x75, 0x15, 0x69, 0xfb,
	0x4b, 0x22, 0x82, 0xdb, 0x69, 0x8b, 0xc9, 0x8e, 0x6f, 0x7c, 0x0f, 0xde, 0xad, 0x6e, 0x6a, 0x35,
	0xe6, 0x3c, 0x66, 0x40, 0xab, 0x4a, 0xaa, 0xea, 0x16, 0x3a, 0x46, 0x1d, 0x61, 0xbe, 0x84, 0xa7,
	0x58, 0xb6, 0x4a, 0xb4, 0x8a, 0xff, 0xe9, 0x04, 0x22, 0xbc, 0x6c, 0xe8, 0xb1, 0xfc, 0x1e, 0x65,
	0x07, 0x5a, 0x72, 0xfa, 0x83, 0x93, 0x07, 0x7c, 0x01, 0x28, 0xb2, 0x28, 0xdd, 0x19, 0xb6, 0xf0,
	0x1d, 0x04, 0x5f, 0xf8, 0x36, 0x33, 0x68, 0xcf, 0x4b, 0x08, 0x3e, 0xd7, 0xe2, 0x76, 0xd9, 0x55,
	0x8d, 0x40, 0x1f, 0xec, 0x34, 0x21, 0x0f, 0xf8, 0x08, 0xee, 0x2e, 0xda, 0x52, 0x62, 0xe1, 0x04,
	0x9c, 0x22, 0x4d, 0x88, 0xad, 0xd7, 0x30, 0xba, 0xa7, 0xbc, 0x8c, 0xf3, 0x84, 0x12, 0x07, 0x01,
	0xfc, 0x9c, 0xad, 0xcb, 0x34, 0x21, 0xae, 0x36, 0xe5, 0xbc, 0x20, 0x9e, 0xbe, 0x9f, 0xf3, 0xa2,
	0x8c, 0x19, 0x8d, 0x38, 0x4d, 0xca, 0x88, 0x13, 0x7f, 0x7e, 0x04, 0x88, 0x65, 0xd3, 0x55, 0x7d,
	0x3d, 0xc8, 0x16, 0x03, 0xf0, 0xe8, 0xb7, 0x43, 0x94, 0x99, 0x23, 0x19, 0xdd, 0xef, 0x89, 0x85,
	0x4f, 0x30, 0x59, 0x53, 0x16, 0x71, 0xca, 0x88, 0xad, 0xff, 0xa7, 0x65, 0xe3, 0x72, 0x90, 0xc0,
	0xf3, 0x7a, 0x5c, 0xc7, 0x8c, 0xe2, 0x8e, 0xb9, 0x74, 0x43, 0x89, 0xb7, 0xfa, 0x08, 0xa4, 0xbe,
	0x2c, 0xfe, 0x8a, 0x53, 0x5f, 0xfd, 0x5e, 0x9c, 0x65, 0xd3, 0xc8, 0x76, 0x15, 0xc4, 0xb2, 0x17,
	0x85, 0xae, 0xaa, 0xb0, 0x7e, 0x9a, 0xce, 0x4e, 0xfe, 0x38, 0x3e, 0xfd, 0x0b, 0x00, 0x00, 0xff,
	0xff, 0x64, 0x59, 0x4b, 0x7e, 0xcf, 0x01, 0x00, 0x00,
}
